## Convert OliTagSeq library to guideSeq compatible intputs
## Use SRR24490402 dataset as example
# example
    # prefetch SRR24490402
    # fasterq-dump --split-3 SRR24490402

## Library structure
# R1 and R2 reads can be swapted
# The first starts with the barcode + adaptor + UMI + gDNA, 
#
#
BARCODE   linker part         UMI     linker part       gDNA part
AACCTCTT GGAGAGCTGCCCAATCTG ACTCGAAT GCTCCCTCGCCT CTCAATTAAACCCGGGTTTAATTGAGTTGTCATATGTTAATAACGGTATGGGGGGTTTAATTGAGTTGTCATATTTTAATAACGGTATGGGGGTTTATGTTATT
AACCTCTT GGAGAGCTGCCCAATCTG ACATCAGT GCTCCCTCGCCT CCCATACCGTTATTAACATATGACAACTCAATTAAACCCCACATACCGTTATTAACAATGCAACTCAATTAAACCCCCATACCGTTATTAACATATGACAGATC
CACACATC GGAGAGCTGCCCAATCTG ATTTTTGT GCTCCCTCGCCT GGGTTTAATTGAGTTGTCATATGTTAATAACGGTATGGGGGGTTTAATTGAGTTGTCATATGTTAATAACGGTATGGGGGTTTAATTGAGTTGTCATATGTTAA
CATCCACC GGAGAGCTGCCCAATCTG AGTTACGT GCTCCCTCGCCT GTCTATATCACCACCGCCCCCGGGCGCGCCCCCGAGGGCGCGTAGCGTTCTTGACTTATGGCAGGTGAATGTAACCCCCACTGAGAGAAAGCCGCAATGCCGGG
...
CGTGCCAA GGAGAGCTGCCCAATCTG TCGTCTCT GCTCCCTCGCCT CCCATACCGTTATTAACATATGACAACTCAATTAAACCCCCCATACCGTTATTGACATATGACAACTCAAGTAATCCCCCCGGACCGTTAGTGAGATAGGACAG

# the second with the ODN sequence that depend on the PCR orientation. ALso many ODN concatemeres are observed in the example dataset.
			        AACATATGANAACTCAATTAAACCC CCCATACCGTTATTAACATATGACAACTCAATTAAACCC CCCCTACCGTTATTAACAGATGACAACTCAATTAAACCC CCCCTACCGGTATTAACATCTGACAACTCAATTAAACCC GGGAGGCG
			        AACATATGANAACTCAATTAAACCC CCCATACCGTTATTAACATATGACAACTCAATTAAACCC  CCATACCGGTATTAACATATGAAAATCAAATAAAACCC CCATACCGATAGTAACAAAAGGAAACGCAAGAAAACCCCGCAAACGGT
		   	      AACATATGACAACTCAATTAAACCC CCCATACCGTTATTAACATATGACAACTCAATTAAACCC  CCATACCGTTATTAACATATGACAACTCAATTAAACCC AGGCGAGGGAGCAGGGCTTTCAGATTGGGCAGCTCTCCGGTGGATGAG
CCCATACCGTTATTAACATATGACAACTCAATTAAACCC CCCATACCGTTATTAACATATGACAACTCAATTAAACCC CCCATACCGGTATTAACATATGACAACTCAATAAAACCC CCATACCGTTATTAACAAAAGACCACTCAAATA

                                   GTCATATGTNAATAACGGTATGGG GGGTTTAATTGAGTTGTCATATGTTAATAACGGTATGGG GGGTTTAATTGAGTTGTCATATGTTAATAACGGTATGGG ACAGGCATGAGCCACTATGCCCAGTCTAAAATAGGCGAGGGAGCATCG
	           GATCCTCGGGAGAGCTGCCCAATCTGTTCTATGCGCTCCCTCGCCT GGGTTTAATTGAGTTGTCGTATGTTAATAACGGTATGGG GGGTTTAATTGAGTTGTAATATGTTAATAAAGGTATGGG GGTTTAATTGAGTTG GGTTTAATTGA
		          AACCTCTTGGAGAGCGCCCAATCTGTTTCGCAAGCTCCCTCGCCT GGGTTTAATTGTGTTGTCTTATGTTTATTAAGTGATGGG GGGTTTAATTGAGTTGGTGTATGTGTTTTTGGGTTTTGGGGGGTTTGGTGTGTGTGTGTTTGTGTG
CAAGGAGAGCTGCCCAATCTGGGAAGTCAGCTCCCTCGCCTTGTTAATAACGGTATGGG GGGTTTAATTGAGTTGTCATATGTTAATAACGGTATGGG CTTGCAGTGAGCCGAGATTGCGCCAGGCGAGGGAGCATTCCCTACAGATTGG
                                 GTCATATGTTAATAACGGTATGGGGG GGGTTTAATTGAGTTGTCATATGTTAATAACGGTATGGG CGTGTGGGGTAGAGGGTGTTGGAGCGGGGAGAAGGCCAGGAGGCGAGGGAGCACTAAGAGCAGATTGGGCAGCTCTCCCCGGTGT



## step 1 : check if R1 or R2 contains the linker sequence.
## IF R1 contains the linker -> R1 and R2 saved as-is
## Reads without adaptor in R1 are saved appart
## Among those untrimmed reads, if R2 contains the linker --> R1 and R2 are swaped
##  R1 files are merged, so are R2.

for library in *_1.fastq; do ## change pattern if necessary

  lib="${library%_1.fastq}"

  ## get reads with linker in R1
  cutadapt -j 24 -g "^NNNNNNNNGGAGAGCTGCCCAATCTGNNNNNNNNGCTCCCTCGCCT"  \
    -O 46 \
    -e 0 \
    --no-indels \
    --action none \
    -o $lib"_R1-link_R1.fastq.gz" \
    -p $lib"_R1-link_R2.fastq.gz" \
    --untrimmed-output $lib"_R1-nolink_R1.fastq.gz" \
    --untrimmed-paired-output $lib"_R1-nolink_R2.fastq.gz" \
    $lib"_1.fastq" $lib"_2.fastq" > $lib"_R1_link.log"

  
  
  ## get reads with linker in R2 --> save R1 to R2 and R2 to R1
  cutadapt -j 24 -G "^NNNNNNNNGGAGAGCTGCCCAATCTGNNNNNNNNGCTCCCTCGCCT" \
    -O 46 \
    -e 0 \
    --no-indels \
    --action none \
    -o $lib"_R2-link_R2.fastq.gz" \
    -p $lib"_R2-link_R1.fastq.gz" \
    --discard-untrimmed \
    $lib"_R1-nolink_R1.fastq.gz" $lib"_R1-nolink_R2.fastq.gz" > $lib"_R2_link.log"
  
  
  rm *nolink*gz
  done
  
  ## concatenate R1 / R2
  cat *_R1.fastq.gz > R1.fastq.gz
  cat *_R2.fastq.gz > Undetermined_R2.fastq.gz
  
  rm *link*gz
  
  
  ## Step 2 : Remove linker and barcode from R1 so it starts directly in the genomic DNA
  
  cutadapt -j 24 -g "^NNNNNNNNGGAGAGCTGCCCAATCTGNNNNNNNNGCTCCCTCGCCT" --no-indels  -e 0 -O 46 R1.fastq.gz -o Undetermined_R1.fastq.gz > R1.log
  
  ## Step 3 : Extract the Barcode and UMI from R1 and build I2 reads
  cutadapt -j 24 -g "^NNNNNNNNGGAGAGCTGCCCAATCTGNNNNNNNN" -O 34 -e 0 --no-indels R1.fastq.gz  -o Undetermined_I2.fastq.gz --action=crop > I2.log
  
  ## Step 4 : copy the n (8 here) first nucleotides to make I1 reads with library barcode
  cutadapt -j 24 -l 8 R1.fastq.gz -o Undetermined_I1.fastq.gz  > I1.log
  
  rm R1.fastq.gz






